---
- name: Apt Upgrade and Install nginx
  block:

    - name: Upgrade dist
      become: true
      apt:
        upgrade: dist
        update_cache: true

    - name: Install packages
      become: true
      apt:
        update_cache: true
        state: latest
        pkg:
          - ntp
          - nginx

- name: Setup Deploy configuration
  block:

    - name: Set branch name
      set_fact:
        deploy_branch: "{{ lookup('env', 'HEAD') }}"
      failed_when: deploy_branch == ''

  rescue:

    - name: Set branch name
      set_fact:
        deploy_branch: "dev"

- name: Check for existing build from given branch
  block:

    - name: Check memo
      stat:
        path: "{{ deploy_branch }}_conf.json"
      register: stat_memo

    - name: Clear build
      file:
        path: /etc/nginx/sites-enabled/airdex_{{ deploy_branch }}.conf
        state: absent
      become: true
      when: stat_memo.stat.exists

    - name: Force restart nginx step 1
      become: true
      systemd:
        name: nginx
        daemon_reload: true
        state: stopped
      when: stat_memo.stat.exists

    - name: Force restart nginx step 2
      become: true
      systemd:
        name: nginx
        enabled: true
        state: started
      when: stat_memo.stat.exists
      
- name: Select available port
  block:

    - name: Gather used ports
      shell: netstat -nlt4 | grep -oP '(?<={{ allowed_ip }}:)(\d+)'
      register: used_ports

    - name: Select deploy_port
      set_fact:
        deploy_port: "{{ allowed_ports | difference( used_ports.stdout_lines | map('int') | list) | first | default(0) }}"
      failed_when: deploy_port | int == 0

    - name: enable UFW
      become: true
      community.general.ufw:
        state: enabled

    - name: allow ssh
      become: true
      community.general.ufw:
        rule: allow
        port: ssh
        proto: tcp

    - name: allow selected port
      become: true
      community.general.ufw:
        rule: allow
        port: "{{ deploy_port }}"
        proto: tcp

- name: Setup Nginx proxy for air_dex
  block:
    
    - name: Create memo
      template: src=deploy.conf.j2 dest={{ deploy_branch }}_conf.json

    - name: Disable default site
      become: true
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Copy Nginx config
      template: src=airdex.conf.j2 dest=/etc/nginx/sites-available/airdex_{{ deploy_branch }}.conf
      become: true
      
    - name: Create new demo directory
      file:
        path: /var/www/flutterapp/{{ deploy_branch }}
        state: directory
        mode: '0755'

    - name: Extract build
      unarchive:
        src: ./airdex-build.tar.gz
        dest: "/var/www/flutterapp/{{ deploy_branch }}"
      become: true
      notify: restart nginx

    - name: Enable Nginx config
      file:
        src: /etc/nginx/sites-available/airdex_{{ deploy_branch }}.conf
        dest: /etc/nginx/sites-enabled/airdex_{{ deploy_branch }}.conf
        state: link
      become: true
      notify: restart nginx

    - name: Log new link
      local_action:
        module: template
        src: demo_link.j2
        dest: demo_link
