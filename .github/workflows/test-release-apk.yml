name: Create Release and Upload Build Artifacts for Android

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Check Coin Assets Update
        run: |
          if grep -q "Coin assets have been updated" build-log.txt; then
            echo "Coin assets updated, cleaning build and cache..."
            flutter clean
            rm -rf ~/.pub-cache
            echo "Re-run the build process."
            exit 1
          fi

      - name: Clean and Build APK
        run: |
          echo "Running \`flutter clean\` to clean the project"
          flutter clean
          echo "Cleaning up unnecessary files"
          rm -rf ~/.pub-cache
          rm -rf build/*
          rm -rf web/src/mm2/*
          rm -rf web/src/kdfi/*
          rm -rf web/dist/*
          echo "Fetching packages again"
          flutter pub get > /dev/null 2>&1
          echo "Running \`flutter build apk\` to generate APK for the deployment build"
          flutter build apk --release || (echo "Build failed" && tail -n 20 build/flutter_build.log && exit 1)
          flutter pub get > /dev/null 2>&1
          echo "Done fetching packages and generating APK"

      - name: List contents of build directory (debugging)
        run: |
          echo "Listing contents of the build directory to check if APK is present:"
          ls -R build

      - name: Archive APK
        run: |
          if [ -f build/app/outputs/flutter-apk/app-release.apk ]; then
            mkdir -p build-outputs/
            cp build/app/outputs/flutter-apk/app-release.apk build-outputs/app-release.apk
          else
            echo "Error: APK not found. Build might have failed."
            exit 1
          fi

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build-outputs/app-release.apk

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          artifacts: build-outputs/app-release.apk
